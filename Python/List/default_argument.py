'''Почему пустой список нельзя использовать как аргумент по умолчанию?

Ответ: Значения по умолчанию для аргументов функции вычисляются только один раз, когда функция определяется, а не каждый раз, когда она вызывается. 
Таким образом, если вы попытаетесь использовать изменяемый тип данных (например, список) как аргумент по умолчанию для функции, то каждый вызов функции, 
который изменяет это значение, также изменит значение по умолчанию для всех последующих вызовов функции. Это может привести к неожиданным поведениям.

Пустой список — это изменяемый тип данных в Python, поэтому его использование в качестве аргумента по умолчанию не рекомендуется. 
Вместо этого лучше использовать None в качестве значения по умолчанию и создавать новый пустой список внутри функции, если требуется список.'''

def append_to_list(element, my_list = None):
    if my_list is None: # Таким образом, каждый вызов функции будет использовать свой собственный, незавитсимый список.
        my_list = []
    my_list.append(element)
    return(my_list)

print(append_to_list(1))
print(append_to_list(10))
print(append_to_list(100))