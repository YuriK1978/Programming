# ТИПЫ СЛОВАРЕЙ:
#1. Обычный дикт
#2. Counter
#3. Chainmap
#4. Ordered amap
#5. Default dict
#6. MappingProxyType

# Под капотом используют хэш-таблицу, где ключ - хэшируемое значение, а значение (ключ-значение) - какое угодно.
# Хэш-значение делится на длину словаря, и затем какк в корзине мы имеем хэш-ключ-значение.
# Словарь, заполненный на 2/3 снова переопределяется - см. выше.

#!!! Dict появились раньше множеств, поэтому дикты обознаяаются {}, в то время как в математике множества обозначают {}.

# !!! При создании пустого словаря используй {}, как в листе.

#my_dict = {'a': 1, 'b': 2, 'c': 3}
#keys = my_dict.keys() #получение представления ключей словаря

#for key in keys:
#    print(key)
    
#if 'a' in keys:
#    print('ключ \'а\' есть в словаре')
#else:
#    print('ключа \'а\' нет в словаре')



#...........Сортировка списка словарей
'''
import operator

users = [
    {'name': 'Вася', 'salary': '100', 'age': 20},
    {'name': 'Петя', 'salary': '200', 'age': 25},
    {'name': 'Саша', 'salary': '200', 'age': 30},
    {'name': 'Маша', 'salary': '300', 'age': 24},
]
   
for item in sorted(users, key = operator.itemgetter('salary', 'age'), reverse = True):
    print(item)
'''

data = {1, True, 1.0}  # Было сказано что у них одинаковый хэш
print(len(data))

# Output: 1
            
