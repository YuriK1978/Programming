# Особенности range-объектов.

# Те же самые последовательности, только ленивые. 

# Обладают теми же свойствами, что и последовательности: 
# 1. обращение по индексу, 
# 2. есть метод Count, 
# 3. index, 
# 4. Можно получать срез, 
# 5. Они знают свою длину,
# 6. По ним можно сколько угодно раз итерироваться.

# Занимают одну и туже память - 48 байт.
# Отдают по одному элементу, когда к ним обращаются.

# !!! RANGE НЕ ЯВЛЯЮТСЯ ИТЕРАТОРАМИ !!! (но являются итерируемым объектом)\
# На их основе можно создать итератор (есть метод iter)

# Под капотом обычная арийметическая прогрессия. (start, stop, шаг)

#.........................ЗАДАЧИ............................................................

#1
# На вход принимаем число n (>0) и выводим все значения от 1 до n.

def convert(n) -> str:
    return(''.join(map(str, range(n+1)))) # Строим range-объект, трансформируем в строку, а потом joinим через пустую строчку.
    
print(convert(12))